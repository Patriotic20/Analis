"""make relationship

Revision ID: 65757db3fc33
Revises: dd9ae208a7ce
Create Date: 2025-05-07 18:49:57.050897

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '65757db3fc33'
down_revision: Union[str, None] = 'dd9ae208a7ce'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # 1) Create the enum type before referencing it
    op.execute(
        "CREATE TYPE orderstatus AS ENUM ('free', 'booked', 'in_progress', 'completed')"
    )

    # ### commands auto generated by Alembic - please adjust! ###
    # analyzes table changes
    op.add_column('analyzes', sa.Column('lab_id', sa.Integer(), nullable=False))
    op.add_column('analyzes', sa.Column('name', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'analyzes', 'labs', ['lab_id'], ['id'])
    op.drop_column('analyzes', 'username')

    # labs table changes
    op.add_column('labs', sa.Column('name', sa.String(), nullable=False))
    op.drop_column('labs', 'username')

    # orders table changes
    op.add_column('orders', sa.Column('user_id', sa.Integer(), nullable=True))
    op.add_column('orders', sa.Column('analis_id', sa.Integer(), nullable=False))
    op.add_column('orders', sa.Column('start_time', sa.String(), nullable=True))
    op.add_column('orders', sa.Column('end_time', sa.String(), nullable=True))
    op.add_column(
        'orders',
        sa.Column(
            'status',
            sa.Enum('free', 'booked', 'in_progress', 'completed', name='orderstatus'),
            nullable=False,
            server_default='free',
        )
    )
    op.create_foreign_key(None, 'orders', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'orders', 'analyzes', ['analis_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # orders table reverse
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.drop_column('orders', 'status')
    op.drop_column('orders', 'end_time')
    op.drop_column('orders', 'start_time')
    op.drop_column('orders', 'analis_id')
    op.drop_column('orders', 'user_id')
    
    op.execute("DROP TYPE orderstatus")

    # labs table reverse
    op.add_column('labs', sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_column('labs', 'name')

    # analyzes table reverse
    op.add_column('analyzes', sa.Column('username', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'analyzes', type_='foreignkey')
    op.drop_column('analyzes', 'name')
    op.drop_column('analyzes', 'lab_id')
    # ### end Alembic commands ###
