"""change last_login in data_9

Revision ID: 612f4bbcffee
Revises: 9aa204b7fef6
Create Date: 2025-05-05 15:49:51.840503

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '612f4bbcffee'
down_revision: Union[str, None] = '9aa204b7fef6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('last_login', sa.String(), nullable=True))
    
    # Create the userrole enum type
    userrole = sa.Enum('admin', 'user', name='userrole')
    userrole.create(op.get_bind(), checkfirst=True)
    
    # Alter the role column with explicit cast using USING
    op.execute("ALTER TABLE users ALTER COLUMN role TYPE userrole USING role::userrole")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Revert the role column back to VARCHAR
    op.alter_column('users', 'role',
                    existing_type=sa.Enum('admin', 'user', name='userrole'),
                    type_=sa.VARCHAR(),
                    existing_nullable=True)
    
    # Drop the last_login column
    op.drop_column('users', 'last_login')
    
    # Drop the userrole enum type
    sa.Enum('admin', 'user', name='userrole').drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###